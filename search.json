[{"path":"https://rte-antares-rpackage.github.io/antaresWaterValues/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2021 Dhia Gharsallaoui Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://rte-antares-rpackage.github.io/antaresWaterValues/articles/Reward-interpolation.html","id":"initialize-study-and-run-simulations","dir":"Articles","previous_headings":"","what":"Initialize study and run simulations","title":"Reward interpolation method","text":"","code":"library(antaresWaterValues) library(dplyr) opts <- antaresRead::setSimulationPath(\"your/path/to/the/antares/study\",\"input\") area <- \"area\" pumping <- T #T if pumping possible mcyears <- 1:3 # Monte Carlo years you want to use efficiency <- getPumpEfficiency(area,opts=opts) name = \"3sim\" simulation_res <- runWaterValuesSimulation(     area=area,     nb_disc_stock = 3, #number of simulations     mcyears = mcyears,     path_solver = \"your/path/to/antares/bin/antares-8.6-solver.exe\",     opts = opts,     otp_dest=paste0(opts$studyPath,\"/user\"),     file_name=name, #name of the saving file     pumping=pumping,     efficiency=efficiency   )"},{"path":"https://rte-antares-rpackage.github.io/antaresWaterValues/articles/Reward-interpolation.html","id":"simple-interpolation-of-reward-function","dir":"Articles","previous_headings":"","what":"Simple interpolation of reward function","title":"Reward interpolation method","text":"method_old = T, reward function simply linear interpolation simulated control simulation cost one control per simulation. method gives underestimation real reward function. example, 3 simulations, reward function first week first Monte Carlo year 3 different controls.","code":"reward_db <- get_Reward(   simulation_names = simulation_res$simulation_names,   simulation_values = simulation_res$simulation_values,   opts=opts,   area = area,   mcyears = mcyears,   efficiency = efficiency,   method_old = T ) #> Warning: 'memory.limit()' is Windows-specific reward_simple <- reward_db$reward reward_simple %>%    dplyr::filter(mcYear==1,timeId==1)%>%   ggplot2::ggplot() +   ggplot2::aes(x = control, y = reward) +   ggplot2::geom_point()"},{"path":"https://rte-antares-rpackage.github.io/antaresWaterValues/articles/Reward-interpolation.html","id":"interpolation-with-marginal-prices","dir":"Articles","previous_headings":"","what":"Interpolation with marginal prices","title":"Reward interpolation method","text":"method_old = F, simulation give one local estimation reward function thanks marginal prices overestimation real reward function. Local estimations combined form one reward function taking minimum estimations. local estimation evaluated controls listed possible_controls. can look local estimation reward function :  final estimation obtained taking minimum estimations :  example, nb_disc_stock = 20, reward function first week first Monte Carlo year 20 different controls.","code":"reward_db <- get_Reward(   simulation_names = simulation_res$simulation_names,   simulation_values = simulation_res$simulation_values,   opts=opts,   area = area,   mcyears = mcyears,   efficiency = efficiency,   method_old = F,   possible_controls = constraint_generator(area=area,                                            mcyears=mcyears,                                            nb_disc_stock = 20,                                            pumping = pumping,                                            efficiency = efficiency,                                            opts=opts)# used for marginal prices interpolation ) reward_marg_interp <- reward_db$reward reward_db$local_reward %>%    dplyr::filter(mcYear==1,week==1) %>%   ggplot2::ggplot() +   ggplot2::aes(x = u, y = reward, color = simulation) +   ggplot2::geom_point() reward_marg_interp %>%    dplyr::filter(mcYear==1,timeId==1) %>%   ggplot2::ggplot() +   ggplot2::aes(x = control, y = reward) +   ggplot2::geom_point()"},{"path":"https://rte-antares-rpackage.github.io/antaresWaterValues/articles/Reward-interpolation.html","id":"comparaison","dir":"Articles","previous_headings":"","what":"Comparaison","title":"Reward interpolation method","text":"Simple interpolation undestimates reward function interpolation marginal prices overestimates reward function. real one red blue curve. interpolation marginal prices time consuming precise number simulation method use order reduce number simulations.","code":"rbind(dplyr::mutate(reward_marg_interp,interpolation = \"marg_prices\"),       dplyr::mutate(reward_simple,interpolation = \"simple\")) %>%   dplyr::filter(mcYear==1,timeId==1) %>%   ggplot2::ggplot() +   ggplot2::aes(x = control, y = reward, color = interpolation) +   ggplot2::geom_line(linewidth = 1) +   ggplot2::geom_point()"},{"path":[]},{"path":"https://rte-antares-rpackage.github.io/antaresWaterValues/articles/computation_watervalues.html","id":"why-do-we-need-water-values","dir":"Articles","previous_headings":"Theory","what":"Why do we need water values ?","title":"Watervalues computation","text":"Antares solves annual unit commitment problem week week. long term hydraulic storages used Antares, procedure needed determine amount water Antares use given week amount Antares keep rest year. One method use water values.","code":""},{"path":"https://rte-antares-rpackage.github.io/antaresWaterValues/articles/computation_watervalues.html","id":"what-are-water-values","dir":"Articles","previous_headings":"Theory","what":"What are water values ?","title":"Watervalues computation","text":"Water values prices euros per MWh helps Antares, weekly sequentially resolution, determine whether use water stocked reservoirs current week keep later year. one water value per area, per week per reservoir level. Water value reprensents best price slice storage sold given week end year. Water values comparable marginal prices thermal units. simple criterion understand water values following : hour, marginal price greater water value, ’s better turbine water reservoir. Otherwise, marginal price lower water value multiplied pumping efficiency, ’s better pump water reservoir, pumping possible. water values defined user need method compute .","code":""},{"path":"https://rte-antares-rpackage.github.io/antaresWaterValues/articles/computation_watervalues.html","id":"how-to-compute-water-values","dir":"Articles","previous_headings":"Theory","what":"How to compute water values ?","title":"Watervalues computation","text":"Water values derivatives Bellman values. Bellman values given, alike water values, area, week reservoir level. represent future avoided cost euros considering amount water stored reservoir. supposed concave respect reservoir level given week. consequence, water values supposed decreasing respect reservoir level given week one strong assumption Antares.","code":""},{"path":"https://rte-antares-rpackage.github.io/antaresWaterValues/articles/computation_watervalues.html","id":"how-to-compute-bellman-values","dir":"Articles","previous_headings":"Theory","what":"How to compute Bellman values ?","title":"Watervalues computation","text":"compute Bellman values, dynamic programming used solving following optimization problems week reservoir level. means one begins solving problem last week year one solves precedent week backtracking. Vt(Xt)=maxU∈[Umin,Umax],Xt+1=Xt−Ut+,Xt+1∈[Xt+1min,Xt+1max]Gt(Xt,Ut,Wt)+Vt+1(Xt+1) V_t(X_t) = \\max_{U \\[U^{min},U^{max}],X_{t+1}=X_t-U_t+I_t,X_{t+1} \\[X_{t+1}^{min},X_{t+1}^{max}]} G_t(X_t,U_t,W_t) + V_{t+1}(X_{t+1}) use following notations : t∈[1,T]t \\[1,T] representing weeks year. Vt(Xt)V_t(X_t) Bellman value week tt reservoir level beginning week ttXtX_t. VT+1(XT+1)=K(XT+1)V_{T+1}(X_{T+1}) = K(X_{T+1}) Bellman value end year supposed known. UtU_t amount water generated (>0>0) pumped (<0<0) extreme values UminU^{min} UmaxU^{max}. also called control. ItI_t inflow week tt. [Xtmin,Xtmax][X_t^{min},X_t^{max}] rule curves beginning week tt. Gt(Xt,Ut,Wt)G_t(X_t,U_t,W_t) reward week tt depending hazards WtW_t comprise inflow. Hazards represented Monte Carlo years Antares. equation means reward possible earn beginning week tt end year best compromise reward week tt reward beginning week t+1t+1 end year. words, best compromise using water week tt keeping weeks.","code":""},{"path":"https://rte-antares-rpackage.github.io/antaresWaterValues/articles/computation_watervalues.html","id":"how-water-values-are-used-in-antares","dir":"Articles","previous_headings":"Theory","what":"How water values are used in Antares ?","title":"Watervalues computation","text":"water values computed differentiating Bellman values, user send Antares. Antares use differently depending hydro-princing-mode : fast : generating pumping penalized given week water value beginning week initial level week similar explanation water values ?. mode assumes level storage going change week. accurate (recommended) : Bellman values built water values objective function Antares minimize operational cost week minus Bellman value final level stock (represent avoided future costs).","code":""},{"path":"https://rte-antares-rpackage.github.io/antaresWaterValues/articles/computation_watervalues.html","id":"practice-how-water-values-are-computed-in-this-package","dir":"Articles","previous_headings":"","what":"Practice : how water values are computed in this package ?","title":"Watervalues computation","text":"three main steps compute water values package using Antares : Compute rewards functions Gt(Xt,Ut,Wt)G_t(X_t,U_t,W_t) weeks possible hazards. Apply precedent equation compute Bellman values. Compute derivative Bellman values get water values. step detailed following paragraphs.","code":""},{"path":"https://rte-antares-rpackage.github.io/antaresWaterValues/articles/computation_watervalues.html","id":"rewards-functions","dir":"Articles","previous_headings":"Practice : how water values are computed in this package ?","what":"Rewards functions","title":"Watervalues computation","text":"First , assume reward Gt(Xt,Ut,Wt)G_t(X_t,U_t,W_t) doesn’t depend reservoir level XtX_t becomes Gt(Ut,Wt)G_t(U_t,W_t) means reward depends week, scenario control storage. Reward functions computed two steps : first one launch Antares simulation (“simulation tab” shiny interface runWaterValuesSimulation() ) second one use simulation results build reward function (“calculate water values” tab get_Reward()). first step, user chooses number controls (nb_disc_stock) reward GtG_t function evaluated. number controls week scenario value controls can change maximum power turbine varies weeks. control, complete Antares simulation launched, IE weeks Monte Carlo years. means exactly one Antares simulation per control. evaluate reward associated control, control storage forced week deactivating storage creating two fictive nodes representing respectively generating pumping binding constraint linking two nodes simulate behavior storage. reward opposite weekly operational cost. simulations run, second step, simulation results used build reward functions. See vignette(\"Reward-interpolation\") details.","code":""},{"path":"https://rte-antares-rpackage.github.io/antaresWaterValues/articles/computation_watervalues.html","id":"computation-of-bellman-values","dir":"Articles","previous_headings":"Practice : how water values are computed in this package ?","what":"Computation of Bellman values","title":"Watervalues computation","text":"Using reward functions, one can now calculate Bellman values Grid_Matrix(). function computes Bellman values week scenario using previous reward function formula given compute Bellman values ?. details function given vignette(\"grid_Matrix-parameters\")","code":""},{"path":"https://rte-antares-rpackage.github.io/antaresWaterValues/articles/computation_watervalues.html","id":"computation-of-water-values","dir":"Articles","previous_headings":"Practice : how water values are computed in this package ?","what":"Computation of water values","title":"Watervalues computation","text":"last step simple. package interpolates Bellman values values every 1% storage calculates derivative Bellman values one value per reservoir level per day (water values constant given week). done function to_Antares_Format(). Water values can written Antares antaresEditObject::writeWaterValues.","code":""},{"path":"https://rte-antares-rpackage.github.io/antaresWaterValues/articles/grid_Matrix-parameters.html","id":"initialize-study-and-reward-functions","dir":"Articles","previous_headings":"","what":"Initialize study and reward functions","title":"Grid_Matrix parameters","text":"First , load package compute reward functions simulations : Now compute reward functions : Define default parameters :","code":"library(antaresWaterValues) library(dplyr) opts <- antaresRead::setSimulationPath(\"your/path/to/the/antares/study\",\"input\") area <- \"area\" pumping <- T #T if pumping possible mcyears <- 1:3 # Monte Carlo years you want to use efficiency <- getPumpEfficiency(area,opts=opts) name = \"3sim\" simulation_res <- runWaterValuesSimulation(     area=area,     nb_disc_stock = 3, #number of simulations     mcyears = mcyears,     path_solver = \"your/path/to/antares/bin/antares-8.6-solver.exe\",     opts = opts,     otp_dest=paste0(opts$studyPath,\"/user\"),     file_name=name, #name of the saving file     pumping=pumping,     efficiency=efficiency   ) reward_db <- get_Reward(   simulation_names = simulation_res$simulation_names,   simulation_values = simulation_res$simulation_values,   opts=opts,   area = area,   mcyears = mcyears,   efficiency = efficiency,   method_old = T, ) #> Warning: 'memory.limit()' is Windows-specific reward <- reward_db$reward states_step_ratio = 1/20 penalty_low = 0 penalty_high = 0 force_final_level = F penalty_final_level = 0 final_level = get_initial_level(area=area,opts=opts) nb_cycle = 1"},{"path":"https://rte-antares-rpackage.github.io/antaresWaterValues/articles/grid_Matrix-parameters.html","id":"number-of-states","dir":"Articles","previous_headings":"","what":"Number of states","title":"Grid_Matrix parameters","text":"parameter states_step_ratio, gives space two state levels Bellman computation, can decreased precise results also increase computational time.   Variations water values detailed 50 states 10. example, 20 states seem enough represent variation water values.  difference bellman values 10 states 20 states quite important example. 10 states, bellman values lower linear interpolation bellman values underestimates real bellman values.","code":"compare_states = data.frame() for (s in c(10,20,50)){   compare_states = Grid_Matrix(     area=area,     reward_db = reward_db,     mcyears = mcyears,     states_step_ratio = 1/s,     opts = opts,     efficiency=efficiency,     penalty_low = penalty_low,     penalty_high = penalty_high,     force_final_level = force_final_level,     final_level = final_level,     penalty_final_level_low = penalty_final_level,     penalty_final_level_high = penalty_final_level,     nb_cycle = nb_cycle   )$aggregated_results %>%      dplyr::mutate(number_states = s) %>%     rbind(compare_states) } compare_states %>%   dplyr::filter(weeks %in% c(2,12,22,32,42,52),!is.na(vu)) %>%   dplyr::mutate(number_states = as.character(number_states)) %>%   ggplot2::ggplot() +   ggplot2::aes(x = states, y = vu, color = number_states) +   ggplot2::geom_point() +   ggplot2::facet_wrap(ggplot2::vars(weeks)) compare_states %>%   dplyr::filter(weeks == 1) %>%   dplyr::mutate(number_states = as.character(number_states)) %>%   ggplot2::ggplot() +   ggplot2::aes(x = states, y = value_node, color = number_states) +   ggplot2::geom_line()"},{"path":"https://rte-antares-rpackage.github.io/antaresWaterValues/articles/grid_Matrix-parameters.html","id":"cvar-value","dir":"Articles","previous_headings":"","what":"Cvar value","title":"Grid_Matrix parameters","text":"Bellman values can computed 2 different formulas : cvar_value = 1 : end week backward recursion, state compute mean Bellman values scenarios. method computed minimum expectancy weekly costs constraint hazards following week yet known. Use method minimize costs. cvar_value < 1 : Similar cvar_value = 1 instead mean scenarios, take mean cvar_value percent worst scenarios week. Use method avoid years high costs particular minimize unsupplied energy. value cvar_value can adapted less cautious.   Smaller cvar_value gives higher water values therefore conservative levels trajectories.  Bellman values small cvar_value method smaller take account week, worst scenarios overestimate total cost.","code":"compare_method = data.frame() for (m in c(1, 0.5, 0.2)){   compare_method = Grid_Matrix(     area=area,     reward_db = reward_db,     mcyears = mcyears,     states_step_ratio = states_step_ratio,     cvar_value = m,     opts = opts,     efficiency=efficiency,     penalty_low = penalty_low,     penalty_high = penalty_high,     force_final_level = force_final_level,     final_level = final_level,     penalty_final_level_low = penalty_final_level,     penalty_final_level_high = penalty_final_level,     nb_cycle = nb_cycle   )$aggregated_results %>%      dplyr::mutate(cvar_value = m) %>%     rbind(compare_method) } compare_method %>%   dplyr::mutate(cvar_value = as.character(cvar_value)) %>%   dplyr::filter(weeks %in% c(2,12,22,32,42,52),!is.na(vu)) %>%   ggplot2::ggplot() +   ggplot2::aes(x = states, y = vu, color = cvar_value) +   ggplot2::geom_point() +   ggplot2::facet_wrap(ggplot2::vars(weeks)) compare_method %>%   dplyr::mutate(cvar_value = as.character(cvar_value)) %>%   dplyr::filter(weeks == 1) %>%   ggplot2::ggplot() +   ggplot2::aes(x = states, y = value_node, color = cvar_value) +   ggplot2::geom_line()"},{"path":"https://rte-antares-rpackage.github.io/antaresWaterValues/articles/grid_Matrix-parameters.html","id":"respect-of-rule-curves","dir":"Articles","previous_headings":"","what":"Respect of rule curves","title":"Grid_Matrix parameters","text":"case, rule curves storage, penalties bottom top rule curves can used encourage storage levels stay inside rule curves. value penalty_low (euros/MWh) chosen respect thermal clusters cost unsupplied cost, depending better use expensive thermal cluster respect lower rule curve. opposite, penalty_high chosen respect spillage cost. Penalties added computation Bellman values future level (end week) also added end algorithm initial level (beginning week) : Vt(Xt)=maxU∈[Umin,Umax],Xt+1=Xt−Ut+,Xt+1∈[Xt+1min,Xt+1max]Gt(Xt,Ut,Wt)+Vt+1(Xt+1)+Pt+1(Xt+1) V_t(X_t) = \\max_{U \\[U^{min},U^{max}],X_{t+1}=X_t-U_t+I_t,X_{t+1} \\[X_{t+1}^{min},X_{t+1}^{max}]} G_t(X_t,U_t,W_t) + V_{t+1}(X_{t+1}) + P_{t+1}(X_{t+1}) Vtfinal(Xt)=Vt(Xt)+Pt(Xt) V^{final}_t(X_t) =V_t(X_t) + P_t(X_{t})  penalty defined : Pt(Xt)=min(0,plow(Xt−X_t),phigh(X¯t−Xt)) P_t(X_{t}) = \\min(0, p_{low}(X_t-\\underline{X}_t), p_{high}(\\overline{X}_t-X_t))   Higher penalty rule curves , higher water values lower rule curve lower water values higher rule curve. help storage remain inside rule curves. weeks beginning year, different levels water values reflecting can take one week get back inside rule curves. Thanks dynamic programming, water values able anticipate respect future rule curves.","code":"compare_rulecurve = data.frame() for (p in c(0,150,500)){   compare_rulecurve = Grid_Matrix(     area=area,     reward_db = reward_db,     mcyears = mcyears,     states_step_ratio = states_step_ratio,     opts = opts,     efficiency=efficiency,     penalty_low = p,     penalty_high = p,     force_final_level = force_final_level,     final_level = final_level,     penalty_final_level_low = penalty_final_level,     penalty_final_level_high = penalty_final_level,     nb_cycle = nb_cycle   )$aggregated_results %>%      dplyr::mutate(penalty = p) %>%     rbind(compare_rulecurve) } compare_rulecurve %>%   dplyr::filter(weeks %in% c(2,12,22,32,42,52),!is.na(vu)) %>%   dplyr::mutate(penalty = as.character(penalty)) %>%   ggplot2::ggplot() +   ggplot2::aes(x = states, y = vu, color = penalty) +   ggplot2::geom_point() +   ggplot2::facet_wrap(ggplot2::vars(weeks))"},{"path":"https://rte-antares-rpackage.github.io/antaresWaterValues/articles/grid_Matrix-parameters.html","id":"respect-of-final-level","dir":"Articles","previous_headings":"","what":"Respect of final level","title":"Grid_Matrix parameters","text":"respect rule curves, possible encourage storage end year specific level thanks penalties. option force_final_level must TRUE. wanted final level specified parameter final_level. Specific values penalties used final week given penalty_final_level_low penalty_final_level_high.  Water values encourage storage end specified final level thanks cone shape.","code":"res = Grid_Matrix(   area=area,   reward_db = reward_db,   mcyears = mcyears,   states_step_ratio = states_step_ratio,   opts = opts,   efficiency=efficiency,   penalty_low = penalty_low,   penalty_high = penalty_high,   force_final_level = T,   final_level = final_level,   penalty_final_level_low = 3000,   penalty_final_level_high = 1000,   nb_cycle = nb_cycle )"},{"path":"https://rte-antares-rpackage.github.io/antaresWaterValues/articles/grid_Matrix-parameters.html","id":"number-of-cycles","dir":"Articles","previous_headings":"","what":"Number of cycles","title":"Grid_Matrix parameters","text":"default, final bellman values equal zero. means unless final level forced, value keeping storage end year. avoid final level fixed, possible several computation Bellman values estimate final Bellman values use end horizon. Empirically, 2 iterations enough.   one cycle, water values lower end year , null final bellman values,optimal solution use storage left. two cycles, water values higher. beginning year, water values similar example (cases), two cycles enough.","code":"compare_cycle = data.frame() for (n in c(1,2)){   compare_cycle = Grid_Matrix(     area=area,     reward_db = reward_db,     mcyears = mcyears,     states_step_ratio = states_step_ratio,     opts = opts,     efficiency=efficiency,     penalty_low = penalty_low,     penalty_high = penalty_high,     force_final_level = force_final_level,     final_level = final_level,     penalty_final_level_low = penalty_final_level,     penalty_final_level_high = penalty_final_level,     nb_cycle = n   )$aggregated_results %>%      dplyr::mutate(nb_cycle = n) %>%     rbind(compare_cycle) } compare_cycle %>%   dplyr::filter(weeks %in% c(2,12,22,32,42,52),!is.na(vu)) %>%   dplyr::mutate(nb_cycle = as.character(nb_cycle)) %>%   ggplot2::ggplot() +   ggplot2::aes(x = states, y = vu, color = nb_cycle) +   ggplot2::geom_point() +   ggplot2::facet_wrap(ggplot2::vars(weeks))"},{"path":"https://rte-antares-rpackage.github.io/antaresWaterValues/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Dhia Gharsallaoui. Author. Juliette Gerbaux. Author, maintainer. Paul Plessiez. Contributor.","code":""},{"path":"https://rte-antares-rpackage.github.io/antaresWaterValues/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Gharsallaoui D, Gerbaux J (2025). antaresWaterValues: Generating water values Antares. R package version 1.1.0, https://rte-antares-rpackage.github.io/antaresWaterValues/.","code":"@Manual{,   title = {antaresWaterValues: Generating water values for Antares},   author = {Dhia Gharsallaoui and Juliette Gerbaux},   year = {2025},   note = {R package version 1.1.0},   url = {https://rte-antares-rpackage.github.io/antaresWaterValues/}, }"},{"path":"https://rte-antares-rpackage.github.io/antaresWaterValues/index.html","id":"antareswatervalues","dir":"","previous_headings":"","what":"Generating water values for Antares","title":"Generating water values for Antares","text":"package calculate water values long term storages Antares studies. uses Antares simulations dynamic programming. theoretical details given : vignette(\"computation_watervalues\").","code":""},{"path":"https://rte-antares-rpackage.github.io/antaresWaterValues/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Generating water values for Antares","text":"can install latest version antaresWaterValues GitHub : load package use : Now ready use package. something gets wrong, please check dependencies versions DESCRIPTION. package edits Antares study resets end wise make copy study using package first time.","code":"# install.packages(\"devtools\") devtools::install_github(\"rte-antares-rpackage/antaresWaterValues@*release\") library(antaresWaterValues)"},{"path":"https://rte-antares-rpackage.github.io/antaresWaterValues/index.html","id":"using-the-shiny-app","dir":"","previous_headings":"","what":"Using the Shiny app","title":"Generating water values for Antares","text":"","code":"opts = antaresRead::setSimulationPath(\"your/path/to/the/antares/study\",\"input\")  shiny_water_values(opts)"},{"path":"https://rte-antares-rpackage.github.io/antaresWaterValues/index.html","id":"without-the-shiny-app","dir":"","previous_headings":"","what":"Without the Shiny app","title":"Generating water values for Antares","text":"Begin defining parameters study. , run simulations. want retrieve results previous simulations, can use : Now compute reward functions : Finally, compute water values :  Water values written Antares thanks following instructions : Values reshaped_values monotone Antares average values. running simulation, hydro-princing-mode must change accurate :","code":"opts <- antaresRead::setSimulationPath(\"your/path/to/the/antares/study\",\"input\") area <- \"area\" pumping <- T #T if pumping possible mcyears <- 1:3 # Monte Carlo years you want to use efficiency <- getPumpEfficiency(area,opts=opts) name = \"3sim\" simulation_res <- runWaterValuesSimulation(     area=area,     nb_disc_stock = 3, #number of simulations     mcyears = mcyears,     path_solver = \"your/path/to/antares/bin/antares-8.6-solver.exe\",     opts = opts,     file_name=name, #name of the saving file     pumping=pumping,     efficiency=efficiency   ) load(paste0(opts$studyPath, \"/user/\", tolower(area),\"_\",name, \".RData\")) reward_db <- get_Reward(   simulation_names = simulation_res$simulation_names,   simulation_values = simulation_res$simulation_values,   opts=opts,   area = area,   mcyears = mcyears,   efficiency = efficiency,   method_old = T,# T if you want a simple linear interpolation of rewards,                  # F if you want to use marginal price to interpolate   possible_controls = constraint_generator(area=area,                                            nb_disc_stock = 20,                                            mcyears=mcyears,                                            pumping = pumping,                                            efficiency = efficiency,                                            opts=opts)# used for marginal prices interpolation ) reward <- reward_db$reward results <- Grid_Matrix(   area=area,   reward_db = reward_db,   mcyears = mcyears,   states_step_ratio = 1/20, # discretization of states   opts = opts,   efficiency=efficiency,   penalty_low = 1000,#penalty for bottom rule curve   penalty_high = 100,#penalty for top rule curve   force_final_level = T, # T if you want to constrain final level with penalties (see Grid_Matrix documentation for more information)   final_level = get_initial_level(area=area,opts=opts), # wanted final level (between 0 and 100%)   penalty_final_level_low = 2000,   penalty_final_level_high = 2000 ) aggregated_results <- results$aggregated_results reshaped_values <- aggregated_results %>%   to_Antares_Format_bis() antaresEditObject::writeWaterValues(   area = area,   data = reshaped_values ) settings_ini <- antaresRead::readIni(file.path(\"settings\", \"generaldata.ini\"),opts=opts) settings_ini$`other preferences`$`hydro-pricing-mode` = \"accurate\" antaresEditObject::writeIni(settings_ini, file.path(\"settings\", \"generaldata.ini\"),overwrite=T,opts=opts)"},{"path":"https://rte-antares-rpackage.github.io/antaresWaterValues/index.html","id":"plot-results","dir":"","previous_headings":"Without the Shiny app","what":"Plot results","title":"Generating water values for Antares","text":"can also plot reward functions","code":"waterValuesViz(Data=aggregated_results,filter_penalties = T) plot_Bellman(value_nodes_dt = aggregated_results,               weeks_to_plot = c(1,3)) plot_1 <- plot_reward(reward_base = reward,                       weeks_to_plot = c(1,3)) plot_2 <- plot_reward_mc(reward_base = reward,                          weeks_to_plot = c(1,3),                          scenarios_to_plot = c(1,2)) plot_3 <- plot_reward_variation(reward_base = reward,                                 weeks_to_plot = c(1,3)) plot_4 <- plot_reward_variation_mc(reward_base = reward,                                    weeks_to_plot = c(1,3),                                    scenarios_to_plot = c(1,2))"},{"path":"https://rte-antares-rpackage.github.io/antaresWaterValues/reference/Bellman.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute Bellman values at step i from step i+1, used in Grid_Matrix — Bellman","title":"Compute Bellman values at step i from step i+1, used in Grid_Matrix — Bellman","text":"Compute Bellman values step step +1, used Grid_Matrix","code":""},{"path":"https://rte-antares-rpackage.github.io/antaresWaterValues/reference/Bellman.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute Bellman values at step i from step i+1, used in Grid_Matrix — Bellman","text":"","code":"Bellman(   Data_week,   next_week_values_l,   decision_space,   E_max,   P_max = 0,   mcyears,   cvar_value = 1,   niveau_max,   states_steps,   penalty_level_low,   penalty_level_high,   lvl_high,   lvl_low,   overflow_cost )"},{"path":"https://rte-antares-rpackage.github.io/antaresWaterValues/reference/Bellman.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute Bellman values at step i from step i+1, used in Grid_Matrix — Bellman","text":"Data_week \"data.table\" generated Grid_Matrix code contains:  * states Numeric. water values can set, listed   decreasing order.  * value_inflow Numeric. Inflow values Monte-Carlo year.  * Rewards simulation value Monte-Carlo year.  * level_high Numeric. Highest possible reservoir value.  * level_low Numeric. Lowest possible reservoir value.  * states_next List vectors enumerating reachable states next_week_values_l Numeric. Bellman values step +1. decision_space Simulation constraints values E_max Numeric length 1. Maximum energy can generated hydro storage one step time. P_max Numeric length 1. Maximum energy can pumped reservoir one step time. mcyears Vector. Monte Carlo years cvar_value numeric [0,1]. probability used cvar algorithm. niveau_max Level max reservoir states_steps Numeric. Discretization step reservoir. penalty_level_low Penalty violating bottom rule curve, comparable unsupplied energy penalty_level_high Penalty violating top rule curve, comparable spilled energy lvl_high Double. Upper rule curve considered week. lvl_low Double. Bottom rule curve considered week. overflow_cost Cost overflow (equal spillage cost area)","code":""},{"path":"https://rte-antares-rpackage.github.io/antaresWaterValues/reference/Bellman.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute Bellman values at step i from step i+1, used in Grid_Matrix — Bellman","text":"data.table like Data_week Bellman values","code":""},{"path":"https://rte-antares-rpackage.github.io/antaresWaterValues/reference/Grid_Matrix.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute Bellman values — Grid_Matrix","title":"Compute Bellman values — Grid_Matrix","text":"Compute Bellman values water values dynamic programming based reward functions computed get_Reward(). Mode information function vignette(\"grid_Matrix-parameters\").","code":""},{"path":"https://rte-antares-rpackage.github.io/antaresWaterValues/reference/Grid_Matrix.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute Bellman values — Grid_Matrix","text":"","code":"Grid_Matrix(   area,   reward_db,   nb_cycle = 1L,   mcyears,   week_53 = 0,   states_step_ratio = 0.01,   reservoir_capacity = NULL,   inflow = NULL,   cvar_value = 1,   opts,   shiny = F,   efficiency = NULL,   until_convergence = F,   convergence_rate = 0.9,   convergence_criteria = 1,   cycle_limit = 10,   correct_concavity = FALSE,   penalty_low = 3000,   penalty_high = 3000,   max_hydro_weekly = NULL,   force_final_level = F,   final_level = NULL,   penalty_final_level_low = NULL,   penalty_final_level_high = NULL )"},{"path":"https://rte-antares-rpackage.github.io/antaresWaterValues/reference/Grid_Matrix.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute Bellman values — Grid_Matrix","text":"area Character. Antares area concerned water values computation. reward_db Reward functions generated function get_Reward(). nb_cycle Integer. Number times run dynamic programming. Used avoid dependency final Bellman values. mcyears Vector integer. Monte Carlo years used compute water values. week_53 Double vector doubles. Final bellman values used end week 52 first cycle performed. states_step_ratio Double. Discretization ratio generate steps levels reservoir capacity zero Bellman values computed. reservoir_capacity Double. Reservoir capacity given area MWh given get_reservoir_capacity(). inflow Generated get_inflow() cvar_value Double 0 1. probability used cvar method. opts List study parameters returned function antaresRead::setSimulationPath(simulation=\"input\") input mode. shiny Binary. TRUE function called shiny_water_values(). efficiency Double 0 1. Pumping efficiency ratio. Get getPumpEfficiency(). until_convergence Binary. TRUE repeat cycles convergence water values attending limit. convergence_rate Double 0 1. Define convergence level until_convergence=TRUE. 1 means values converged (ie identical water values current cycle last one) 0 means convergence needed stop. convergence_criteria Double. Used until_convergence=TRUE. Thereshold consider two different water values identical. cycle_limit Integer. Used until_convergence=TRUE. Maximum cycles perform. correct_concavity Binary argument (default FALSE). TRUE correct concavity Bellman values. penalty_low Double. Penalty violating bottom rule curve, comparable unsupplied energy cost. penalty_high Double. Penalty violating top rule curve, comparable spilled energy cost. max_hydro_weekly Maximum weekly pumping generating power generated function get_max_hydro() timeStep=\"hourly\". force_final_level Binary. Whether final level constrained. final_level Double. Final level (percent 0 100) final level constrained. want initial level, use get_initial_level(). penalty_final_level_low Double. Penalties bottom rule curve constrain final level. penalty_final_level_high Double. Penalties top rule curve constrain final level.","code":""},{"path":"https://rte-antares-rpackage.github.io/antaresWaterValues/reference/Grid_Matrix.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute Bellman values — Grid_Matrix","text":"watervalues dplyr::tibble() multiple columns detailed results. aggregated_results dplyr::tibble() multiple columns summarized results.","code":""},{"path":"https://rte-antares-rpackage.github.io/antaresWaterValues/reference/add_fictive_fatal_prod_demand.html","id":null,"dir":"Reference","previous_headings":"","what":"Add fictive production and fictive load to avoid infeasabilities with binding constraints — add_fictive_fatal_prod_demand","title":"Add fictive production and fictive load to avoid infeasabilities with binding constraints — add_fictive_fatal_prod_demand","text":"Add fictive production fictive load avoid infeasabilities binding constraints","code":""},{"path":"https://rte-antares-rpackage.github.io/antaresWaterValues/reference/add_fictive_fatal_prod_demand.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add fictive production and fictive load to avoid infeasabilities with binding constraints — add_fictive_fatal_prod_demand","text":"","code":"add_fictive_fatal_prod_demand(area, opts, load, misc_gen)"},{"path":"https://rte-antares-rpackage.github.io/antaresWaterValues/reference/add_fictive_fatal_prod_demand.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add fictive production and fictive load to avoid infeasabilities with binding constraints — add_fictive_fatal_prod_demand","text":"area valid Antares area. opts List simulation parameters returned function antaresRead::setSimulationPath load Matrix 8760 rows contains backup load area misc_gen Matrix 8760 rows contains backup misc generation area","code":""},{"path":"https://rte-antares-rpackage.github.io/antaresWaterValues/reference/add_fictive_fatal_prod_demand.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add fictive production and fictive load to avoid infeasabilities with binding constraints — add_fictive_fatal_prod_demand","text":"updated list containing various information simulation.","code":""},{"path":"https://rte-antares-rpackage.github.io/antaresWaterValues/reference/build_all_possible_decisions.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a data frame with all possible transition and associated next state for each scenario and each state for one particular week, used in Bellman. For each next state, Bellman value is calculated. — build_all_possible_decisions","title":"Create a data frame with all possible transition and associated next state for each scenario and each state for one particular week, used in Bellman. For each next state, Bellman value is calculated. — build_all_possible_decisions","text":"Create data frame possible transition associated next state scenario state one particular week, used Bellman. next state, Bellman value calculated.","code":""},{"path":"https://rte-antares-rpackage.github.io/antaresWaterValues/reference/build_all_possible_decisions.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a data frame with all possible transition and associated next state for each scenario and each state for one particular week, used in Bellman. For each next state, Bellman value is calculated. — build_all_possible_decisions","text":"","code":"build_all_possible_decisions(   Data_week,   decision_space,   f_next_value,   mcyears,   lvl_high,   lvl_low,   E_max,   P_max,   next_week_values,   niveau_max,   overflow_cost )"},{"path":"https://rte-antares-rpackage.github.io/antaresWaterValues/reference/build_all_possible_decisions.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a data frame with all possible transition and associated next state for each scenario and each state for one particular week, used in Bellman. For each next state, Bellman value is calculated. — build_all_possible_decisions","text":"Data_week Data frame generated Grid_Matrix code containing list states years evaluated (suppose one week time) weel inflows decision_space Simulation constraints values week generated get_Reward runWaterValuesSimulation f_next_value List approximated Bellman functions next week, generated get_bellman_values_interpolation mcyears Vector monte carlo years take account lvl_high Double, top rule curve end week MWh lvl_low Double, bottom rule curve end week MWh E_max Double, weekly maximum turbining power week P_max Double, weekly maximum pumping power week next_week_values Vector Bellman values next week niveau_max Reservoir capacity MWh overflow_cost Cost overflow (equal spillage cost area)","code":""},{"path":"https://rte-antares-rpackage.github.io/antaresWaterValues/reference/build_all_possible_decisions.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a data frame with all possible transition and associated next state for each scenario and each state for one particular week, used in Bellman. For each next state, Bellman value is calculated. — build_all_possible_decisions","text":"Data frame format Data week 3 columns : next_state, control (transition next state) next value (Bellman value next state)","code":""},{"path":"https://rte-antares-rpackage.github.io/antaresWaterValues/reference/build_data_watervalues.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate and plot watervalues with value_node_gen. Penalties taken into account. Used in Grid_Matrix — build_data_watervalues","title":"Calculate and plot watervalues with value_node_gen. Penalties taken into account. Used in Grid_Matrix — build_data_watervalues","text":"Calculate plot watervalues value_node_gen. Penalties taken account. Used Grid_Matrix","code":""},{"path":"https://rte-antares-rpackage.github.io/antaresWaterValues/reference/build_data_watervalues.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate and plot watervalues with value_node_gen. Penalties taken into account. Used in Grid_Matrix — build_data_watervalues","text":"","code":"build_data_watervalues(   watervalues,   statesdt,   reservoir,   penalty_level_high,   penalty_level_low,   force_final_level = F,   penalty_final_level_low = 0,   penalty_final_level_high = 0,   final_level = NULL )"},{"path":"https://rte-antares-rpackage.github.io/antaresWaterValues/reference/build_data_watervalues.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate and plot watervalues with value_node_gen. Penalties taken into account. Used in Grid_Matrix — build_data_watervalues","text":"watervalues Data frame generated Grid_Matrix statesdt Data frame possible states, generated Grid_Matrix reservoir Data frame describing rule curves, generated readReservoirLevels penalty_level_high Penalty violating bottom rule curve penalty_level_low Penalty violating top rule curve force_final_level Binary. Whether final level constrained penalty_final_level_low Penalties bottom rule curve constrain final level penalty_final_level_high Penalties top rule curve constrain final level final_level Double. Final level consider","code":""},{"path":"https://rte-antares-rpackage.github.io/antaresWaterValues/reference/build_data_watervalues.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate and plot watervalues with value_node_gen. Penalties taken into account. Used in Grid_Matrix — build_data_watervalues","text":"Data frame water value (vu) week (weeks) state (states). vu_pen corresponds water value without penalties","code":""},{"path":"https://rte-antares-rpackage.github.io/antaresWaterValues/reference/changeHydroManagement.html","id":null,"dir":"Reference","previous_headings":"","what":"Change hydro management — changeHydroManagement","title":"Change hydro management — changeHydroManagement","text":"given area, choose hydro storage managed water values /heuristic. possible neither water values heuristic.","code":""},{"path":"https://rte-antares-rpackage.github.io/antaresWaterValues/reference/changeHydroManagement.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Change hydro management — changeHydroManagement","text":"","code":"changeHydroManagement(watervalues = F, heuristic = T, opts, area)"},{"path":"https://rte-antares-rpackage.github.io/antaresWaterValues/reference/changeHydroManagement.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Change hydro management — changeHydroManagement","text":"watervalues Binary. T use water values. heuristic Binary. T use heuristic. opts List study parameters returned function antaresRead::setSimulationPath(simulation=\"input\") input mode. area Character. Antares area change hydro management.","code":""},{"path":"https://rte-antares-rpackage.github.io/antaresWaterValues/reference/constraint_generator.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate control values — constraint_generator","title":"Generate control values — constraint_generator","text":"Generate list control values, eg difference final initial level week given area. Used run simulations runWaterValuesSimulation() also estimate reward functions functions Grid_Matrix() get_Reward().","code":""},{"path":"https://rte-antares-rpackage.github.io/antaresWaterValues/reference/constraint_generator.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate control values — constraint_generator","text":"","code":"constraint_generator(   area,   nb_disc_stock,   pumping = T,   efficiency = NULL,   opts,   max_hydro = NULL,   inflow = NULL,   mcyears = NULL )"},{"path":"https://rte-antares-rpackage.github.io/antaresWaterValues/reference/constraint_generator.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate control values — constraint_generator","text":"area Character. Antares area concerned water values computation. nb_disc_stock Integer. Number constraint values wanted week. pumping Boolean. True take account pumping capacity. efficiency Double 0 1. Pumping efficiency ratio. Get getPumpEfficiency(). opts List study parameters returned function antaresRead::setSimulationPath(simulation=\"input\") input mode. max_hydro Weekly pumping turbining maximum powers, generated get_max_hydro(). inflow Weekly inflow, generated get_inflow(). mcyears Vector integer. Monte Carlo years used compute water values.","code":""},{"path":"https://rte-antares-rpackage.github.io/antaresWaterValues/reference/constraint_generator.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate control values — constraint_generator","text":"dplyr::tibble() 3 columns : \"week\" (integer), \"u\" (double), \"sim\" (character). week 1 52, nb_disc_stock different controls values generated maximum pumping power maximum generating power. controls equally spaced maximum pumping power (negative value) 0 0 maximum generating power (positive value). Controls values stored column \"u\". Column \"sim\" indexes control values form \"u_i\" index.","code":""},{"path":"https://rte-antares-rpackage.github.io/antaresWaterValues/reference/constraint_week.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate constraint values for a week at a time used in constraint_generator depending on the maximum powers for the week — constraint_week","title":"Generate constraint values for a week at a time used in constraint_generator depending on the maximum powers for the week — constraint_week","text":"Generate constraint values week time used constraint_generator depending maximum powers week","code":""},{"path":"https://rte-antares-rpackage.github.io/antaresWaterValues/reference/constraint_week.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate constraint values for a week at a time used in constraint_generator depending on the maximum powers for the week — constraint_week","text":"","code":"constraint_week(pumping, efficiency, nb_disc_stock, res_cap, hydro, week)"},{"path":"https://rte-antares-rpackage.github.io/antaresWaterValues/reference/constraint_week.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate constraint values for a week at a time used in constraint_generator depending on the maximum powers for the week — constraint_week","text":"pumping Boolean. True take account pumping. efficiency 0 1. pumping efficiency ratio. nb_disc_stock Number constraint values wanted week res_cap Double, reservoir capacity hydro Pumping turbining maximum powers week, generated get_max_hydro week Current week compute controls","code":""},{"path":"https://rte-antares-rpackage.github.io/antaresWaterValues/reference/constraint_week.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate constraint values for a week at a time used in constraint_generator depending on the maximum powers for the week — constraint_week","text":"List constraint values week","code":""},{"path":"https://rte-antares-rpackage.github.io/antaresWaterValues/reference/converged.html","id":null,"dir":"Reference","previous_headings":"","what":"test a difference vector convergence, used in Grid_Matrix — converged","title":"test a difference vector convergence, used in Grid_Matrix — converged","text":"test difference vector convergence, used Grid_Matrix","code":""},{"path":"https://rte-antares-rpackage.github.io/antaresWaterValues/reference/converged.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"test a difference vector convergence, used in Grid_Matrix — converged","text":"","code":"converged(diff_vect, conv = 1)"},{"path":"https://rte-antares-rpackage.github.io/antaresWaterValues/reference/converged.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"test a difference vector convergence, used in Grid_Matrix — converged","text":"diff_vect vector water values differences conv value difference become converged","code":""},{"path":"https://rte-antares-rpackage.github.io/antaresWaterValues/reference/correct_concavity.html","id":null,"dir":"Reference","previous_headings":"","what":"Correct concavity of Bellman values for the given weeks to have nice monotony for water values, used in Grid_Matrix — correct_concavity","title":"Correct concavity of Bellman values for the given weeks to have nice monotony for water values, used in Grid_Matrix — correct_concavity","text":"Correct concavity Bellman values given weeks nice monotony water values, used Grid_Matrix","code":""},{"path":"https://rte-antares-rpackage.github.io/antaresWaterValues/reference/correct_concavity.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Correct concavity of Bellman values for the given weeks to have nice monotony for water values, used in Grid_Matrix — correct_concavity","text":"","code":"correct_concavity(df_value_node, weeks)"},{"path":"https://rte-antares-rpackage.github.io/antaresWaterValues/reference/correct_concavity.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Correct concavity of Bellman values for the given weeks to have nice monotony for water values, used in Grid_Matrix — correct_concavity","text":"df_value_node DataFrame containing bellman values weeks Weeks want correct concavity","code":""},{"path":"https://rte-antares-rpackage.github.io/antaresWaterValues/reference/correct_concavity.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Correct concavity of Bellman values for the given weeks to have nice monotony for water values, used in Grid_Matrix — correct_concavity","text":"vector corrected Bellman values","code":""},{"path":"https://rte-antares-rpackage.github.io/antaresWaterValues/reference/disable_constraint.html","id":null,"dir":"Reference","previous_headings":"","what":"This function disable binding constraints for runWaterValuesSimulation — disable_constraint","title":"This function disable binding constraints for runWaterValuesSimulation — disable_constraint","text":"function disable binding constraints runWaterValuesSimulation","code":""},{"path":"https://rte-antares-rpackage.github.io/antaresWaterValues/reference/disable_constraint.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"This function disable binding constraints for runWaterValuesSimulation — disable_constraint","text":"","code":"disable_constraint(opts, pumping, area)"},{"path":"https://rte-antares-rpackage.github.io/antaresWaterValues/reference/disable_constraint.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"This function disable binding constraints for runWaterValuesSimulation — disable_constraint","text":"opts List simulation parameters returned function antaresRead::setSimulationPath pumping Boolean. True take account pumping. area Area used calculate watervalues","code":""},{"path":"https://rte-antares-rpackage.github.io/antaresWaterValues/reference/generate_constraints.html","id":null,"dir":"Reference","previous_headings":"","what":"This function generate binding constraints for runWaterValuesSimulation — generate_constraints","title":"This function generate binding constraints for runWaterValuesSimulation — generate_constraints","text":"function generate binding constraints runWaterValuesSimulation","code":""},{"path":"https://rte-antares-rpackage.github.io/antaresWaterValues/reference/generate_constraints.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"This function generate binding constraints for runWaterValuesSimulation — generate_constraints","text":"","code":"generate_constraints(pumping, efficiency, opts, area)"},{"path":"https://rte-antares-rpackage.github.io/antaresWaterValues/reference/generate_constraints.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"This function generate binding constraints for runWaterValuesSimulation — generate_constraints","text":"pumping bool efficiency [0,1]. efficient ratio pumping. opts List simulation parameters returned function antaresRead::setSimulationPath area Area used calculate watervalues","code":""},{"path":"https://rte-antares-rpackage.github.io/antaresWaterValues/reference/generate_link_coeff.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate coefficients for biding constraints, used in runWaterValuesSimulation — generate_link_coeff","title":"Generate coefficients for biding constraints, used in runWaterValuesSimulation — generate_link_coeff","text":"Generate coefficients biding constraints, used runWaterValuesSimulation","code":""},{"path":"https://rte-antares-rpackage.github.io/antaresWaterValues/reference/generate_link_coeff.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate coefficients for biding constraints, used in runWaterValuesSimulation — generate_link_coeff","text":"","code":"generate_link_coeff(area, fictive_area)"},{"path":"https://rte-antares-rpackage.github.io/antaresWaterValues/reference/generate_link_coeff.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate coefficients for biding constraints, used in runWaterValuesSimulation — generate_link_coeff","text":"area Area area fictive_area Fictive area involved biding contraint","code":""},{"path":"https://rte-antares-rpackage.github.io/antaresWaterValues/reference/generate_link_coeff.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate coefficients for biding constraints, used in runWaterValuesSimulation — generate_link_coeff","text":"Named vector coefficients","code":""},{"path":"https://rte-antares-rpackage.github.io/antaresWaterValues/reference/generate_rhs_bc.html","id":null,"dir":"Reference","previous_headings":"","what":"Modify time-series of clusters in fictive_area_bc to implement the constraint value for each week and each MC year — generate_rhs_bc","title":"Modify time-series of clusters in fictive_area_bc to implement the constraint value for each week and each MC year — generate_rhs_bc","text":"Modify time-series clusters fictive_area_bc implement constraint value week MC year","code":""},{"path":"https://rte-antares-rpackage.github.io/antaresWaterValues/reference/generate_rhs_bc.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Modify time-series of clusters in fictive_area_bc to implement the constraint value for each week and each MC year — generate_rhs_bc","text":"","code":"generate_rhs_bc(constraint_value, area, opts)"},{"path":"https://rte-antares-rpackage.github.io/antaresWaterValues/reference/generate_rhs_bc.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Modify time-series of clusters in fictive_area_bc to implement the constraint value for each week and each MC year — generate_rhs_bc","text":"constraint_value Data.frame (week,sim,u) area Area used calculate watervalues opts List simulation parameters returned function antaresRead::setSimulationPath","code":""},{"path":"https://rte-antares-rpackage.github.io/antaresWaterValues/reference/getBackupData.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate backup data for area — getBackupData","title":"Generate backup data for area — getBackupData","text":"Generate backup data area","code":""},{"path":"https://rte-antares-rpackage.github.io/antaresWaterValues/reference/getBackupData.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate backup data for area — getBackupData","text":"","code":"getBackupData(area, mcyears, opts)"},{"path":"https://rte-antares-rpackage.github.io/antaresWaterValues/reference/getBackupData.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate backup data for area — getBackupData","text":"area Character. Antares area concerned water values computation. mcyears Vector integer. Monte Carlo years used compute water values. opts List study parameters returned function antaresRead::setSimulationPath(simulation=\"input\") input mode.","code":""},{"path":"https://rte-antares-rpackage.github.io/antaresWaterValues/reference/getBackupData.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate backup data for area — getBackupData","text":"List hydro_storage, load misc_gen backups area","code":""},{"path":"https://rte-antares-rpackage.github.io/antaresWaterValues/reference/getPumpEfficiency.html","id":null,"dir":"Reference","previous_headings":"","what":"Get pumping efficiency ratio — getPumpEfficiency","title":"Get pumping efficiency ratio — getPumpEfficiency","text":"Get pumping efficiency ratio given area. Reservoir management must .","code":""},{"path":"https://rte-antares-rpackage.github.io/antaresWaterValues/reference/getPumpEfficiency.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get pumping efficiency ratio — getPumpEfficiency","text":"","code":"getPumpEfficiency(area, opts)"},{"path":"https://rte-antares-rpackage.github.io/antaresWaterValues/reference/getPumpEfficiency.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get pumping efficiency ratio — getPumpEfficiency","text":"area Character. Antares area concerned water values computation. opts List study parameters returned function antaresRead::setSimulationPath(simulation=\"input\") input mode.","code":""},{"path":"https://rte-antares-rpackage.github.io/antaresWaterValues/reference/getPumpEfficiency.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get pumping efficiency ratio — getPumpEfficiency","text":"Double. Pumping efficiency ratio.","code":""},{"path":"https://rte-antares-rpackage.github.io/antaresWaterValues/reference/get_Reward.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute reward functions — get_Reward","title":"Compute reward functions — get_Reward","text":"Compute reward functions weeks 1 52 scenarios mcyears given area simulations listed simulation_names. specific week specific scenario, reward function evaluated based results simulations depending method_old chosen. Mainly used Grid_Matrix().","code":""},{"path":"https://rte-antares-rpackage.github.io/antaresWaterValues/reference/get_Reward.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute reward functions — get_Reward","text":"","code":"get_Reward(   simulation_values = NULL,   simulation_names = NULL,   opts,   correct_monotony = FALSE,   method_old = TRUE,   possible_controls = NULL,   max_hydro_hourly = NULL,   mcyears = \"all\",   area,   efficiency = NULL,   expansion = F )"},{"path":"https://rte-antares-rpackage.github.io/antaresWaterValues/reference/get_Reward.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute reward functions — get_Reward","text":"simulation_values dplyr::tibble() columns \"week\", \"sim\", \"u\" \"mcYear\" (optional) gives constraint values per week (per scenario) used simulation. Correspond simulation_values output runWaterValuesSimulation(). simulation_names Vector character. List simulations names use compute reward. Correspond simulation_names output runWaterValuesSimulation(). opts List study parameters returned function antaresRead::setSimulationPath(simulation=\"input\") input mode. correct_monotony Binary. True correct monotony rewards method_old = TRUE. method_old Binary. Method build reward function. See vignette(\"Reward-interpolation\"). possible_controls method_old=FALSE, controls compute reward, generated constraint_generator(). max_hydro_hourly Maximum hourly pumping generating power generated function get_max_hydro() timeStep=\"hourly\". mcyears Vector integer. Monte Carlo years used compute water values. area Character. Antares area concerned water values computation. efficiency Double 0 1. Pumping efficiency ratio. Get getPumpEfficiency(). expansion Binary. True mode expansion (ie linear relaxation) Antares used run simulations, argument passed runSimulation. recommended use mode expansion, faster (one iteration done) results smoother cost result correspond linear relaxation problem.","code":""},{"path":"https://rte-antares-rpackage.github.io/antaresWaterValues/reference/get_Reward.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute reward functions — get_Reward","text":"reward dplyr::tibble() columns \"timeId\", \"mcYear\", \"control\" \"reward\". Reward functions weeks (timeId) scenarios (mcYear). local_reward method_old=FALSE. dplyr::tibble() columns \"week\", \"mcYear\", \"u\", \"reward\" \"simulation\". reward functions different simulations computed get_local_reward() reward_offset(). simulation_names See arguments. simulation_values See arguments.","code":""},{"path":"https://rte-antares-rpackage.github.io/antaresWaterValues/reference/get_bellman_values_interpolation.html","id":null,"dir":"Reference","previous_headings":"","what":"Create approximation of Bellman function for next week for each scenario, used in Bellman and in getOptimalTrend — get_bellman_values_interpolation","title":"Create approximation of Bellman function for next week for each scenario, used in Bellman and in getOptimalTrend — get_bellman_values_interpolation","text":"Create approximation Bellman function next week scenario, used Bellman getOptimalTrend","code":""},{"path":"https://rte-antares-rpackage.github.io/antaresWaterValues/reference/get_bellman_values_interpolation.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create approximation of Bellman function for next week for each scenario, used in Bellman and in getOptimalTrend — get_bellman_values_interpolation","text":"","code":"get_bellman_values_interpolation(Data_week, next_week_values, mcyears)"},{"path":"https://rte-antares-rpackage.github.io/antaresWaterValues/reference/get_bellman_values_interpolation.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create approximation of Bellman function for next week for each scenario, used in Bellman and in getOptimalTrend — get_bellman_values_interpolation","text":"Data_week Data frame generated Grid_Matrix code containing list states years evaluated (suppose one week time) next_week_values Vector Bellman values interpolate mcyears Vector monte carlo years take account","code":""},{"path":"https://rte-antares-rpackage.github.io/antaresWaterValues/reference/get_bellman_values_interpolation.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create approximation of Bellman function for next week for each scenario, used in Bellman and in getOptimalTrend — get_bellman_values_interpolation","text":"List stats::approxfun scenario","code":""},{"path":"https://rte-antares-rpackage.github.io/antaresWaterValues/reference/get_inflow.html","id":null,"dir":"Reference","previous_headings":"","what":"Get weekly inflows — get_inflow","title":"Get weekly inflows — get_inflow","text":"Get weekly inflows given area weeks 1 52 time-series mcyears. Please note time series index correspond scenario number scenario builder, generate inconsistencies.","code":""},{"path":"https://rte-antares-rpackage.github.io/antaresWaterValues/reference/get_inflow.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get weekly inflows — get_inflow","text":"","code":"get_inflow(area, opts, mcyears)"},{"path":"https://rte-antares-rpackage.github.io/antaresWaterValues/reference/get_inflow.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get weekly inflows — get_inflow","text":"area Character. Antares area concerned water values computation. opts List study parameters returned function antaresRead::setSimulationPath(simulation=\"input\") input mode. mcyears Vector integer. Monte Carlo years used compute water values.","code":""},{"path":"https://rte-antares-rpackage.github.io/antaresWaterValues/reference/get_inflow.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get weekly inflows — get_inflow","text":"dplyr::tibble() 4 columns : \"timeId\" (integer), \"tsId\" (integer), \"hydroStorage\" (double) \"area\" (character). line give amount weekly inflow (\"hydroStorage\") area week (\"timeId\") scenario (\"tsId\").","code":""},{"path":"https://rte-antares-rpackage.github.io/antaresWaterValues/reference/get_initial_level.html","id":null,"dir":"Reference","previous_headings":"","what":"Get initial level — get_initial_level","title":"Get initial level — get_initial_level","text":"Get initial level hydro storage given area. Initial level defined trough low high reservoir levels first day.","code":""},{"path":"https://rte-antares-rpackage.github.io/antaresWaterValues/reference/get_initial_level.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get initial level — get_initial_level","text":"","code":"get_initial_level(area, opts)"},{"path":"https://rte-antares-rpackage.github.io/antaresWaterValues/reference/get_initial_level.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get initial level — get_initial_level","text":"area Character. Antares area concerned water values computation. opts List study parameters returned function antaresRead::setSimulationPath(simulation=\"input\") input mode.","code":""},{"path":"https://rte-antares-rpackage.github.io/antaresWaterValues/reference/get_initial_level.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get initial level — get_initial_level","text":"Double. Initial level percentage, value 0 100%.","code":""},{"path":"https://rte-antares-rpackage.github.io/antaresWaterValues/reference/get_local_reward.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute reward functions based on one given simulation — get_local_reward","title":"Compute reward functions based on one given simulation — get_local_reward","text":"Reward functions computed weeks 1 52 scenarios mcyears given area. specific week specific scenario, reward function evaluated controls listed possible_controls based marginal prices real control done simulation. function mainly used get_Reward().","code":""},{"path":"https://rte-antares-rpackage.github.io/antaresWaterValues/reference/get_local_reward.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute reward functions based on one given simulation — get_local_reward","text":"","code":"get_local_reward(   simu,   possible_controls,   max_hydro_hourly,   area,   mcyears,   u0,   efficiency )"},{"path":"https://rte-antares-rpackage.github.io/antaresWaterValues/reference/get_local_reward.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute reward functions based on one given simulation — get_local_reward","text":"simu List simulation parameters returned function antaresRead::setSimulationPath() simulation selected. possible_controls method_old=FALSE, controls compute reward, generated constraint_generator(). max_hydro_hourly Maximum hourly pumping generating power generated function get_max_hydro() timeStep=\"hourly\". area Character. Antares area concerned water values computation. mcyears Vector integer. Monte Carlo years used compute water values. u0 dplyr::tibble() columns \"week\", \"u\" \"mcYear\" (optional) gives constraint values per week (per scenario) used simulation. extracted simulation_values output runWaterValuesSimulation() filtering column \"sim\" corresponding simulation. efficiency Double 0 1. Pumping efficiency ratio. Get getPumpEfficiency().","code":""},{"path":"https://rte-antares-rpackage.github.io/antaresWaterValues/reference/get_local_reward.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute reward functions based on one given simulation — get_local_reward","text":"dplyr::tibble() columns \"week\", \"mcYear\", \"u\" \"reward\". Controls column \"u\" correspond possible_controls.","code":""},{"path":"https://rte-antares-rpackage.github.io/antaresWaterValues/reference/get_max_hydro.html","id":null,"dir":"Reference","previous_headings":"","what":"Get pumping and generating hydro power — get_max_hydro","title":"Get pumping and generating hydro power — get_max_hydro","text":"Get maximum pumping generating hydro capacities given horizon given timeStep.","code":""},{"path":"https://rte-antares-rpackage.github.io/antaresWaterValues/reference/get_max_hydro.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get pumping and generating hydro power — get_max_hydro","text":"","code":"get_max_hydro(area, opts, timeStep = \"hourly\")"},{"path":"https://rte-antares-rpackage.github.io/antaresWaterValues/reference/get_max_hydro.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get pumping and generating hydro power — get_max_hydro","text":"area Character. Antares area concerned water values computation. opts List study parameters returned function antaresRead::setSimulationPath(simulation=\"input\") input mode. timeStep Character among \"hourly\", \"daily\" \"weekly\".","code":""},{"path":"https://rte-antares-rpackage.github.io/antaresWaterValues/reference/get_max_hydro.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get pumping and generating hydro power — get_max_hydro","text":"dplyr::tibble() 3 columns : \"timeId\", \"pump\" \"turb\".","code":""},{"path":"https://rte-antares-rpackage.github.io/antaresWaterValues/reference/get_reservoir_capacity.html","id":null,"dir":"Reference","previous_headings":"","what":"Get reservoir capacity — get_reservoir_capacity","title":"Get reservoir capacity — get_reservoir_capacity","text":"Get hydro reservoir capacity given area. Reservoir management must .","code":""},{"path":"https://rte-antares-rpackage.github.io/antaresWaterValues/reference/get_reservoir_capacity.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get reservoir capacity — get_reservoir_capacity","text":"","code":"get_reservoir_capacity(area, opts)"},{"path":"https://rte-antares-rpackage.github.io/antaresWaterValues/reference/get_reservoir_capacity.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get reservoir capacity — get_reservoir_capacity","text":"area Character. Antares area concerned water values computation. opts List study parameters returned function antaresRead::setSimulationPath(simulation=\"input\") input mode.","code":""},{"path":"https://rte-antares-rpackage.github.io/antaresWaterValues/reference/get_reservoir_capacity.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get reservoir capacity — get_reservoir_capacity","text":"Double, reservoir capacity MWh.","code":""},{"path":"https://rte-antares-rpackage.github.io/antaresWaterValues/reference/get_reward_interpolation.html","id":null,"dir":"Reference","previous_headings":"","what":"Create approximation of reward function for each scenario, used in Bellman — get_reward_interpolation","title":"Create approximation of reward function for each scenario, used in Bellman — get_reward_interpolation","text":"Create approximation reward function scenario, used Bellman","code":""},{"path":"https://rte-antares-rpackage.github.io/antaresWaterValues/reference/get_reward_interpolation.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create approximation of reward function for each scenario, used in Bellman — get_reward_interpolation","text":"","code":"get_reward_interpolation(Data_week)"},{"path":"https://rte-antares-rpackage.github.io/antaresWaterValues/reference/get_reward_interpolation.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create approximation of reward function for each scenario, used in Bellman — get_reward_interpolation","text":"Data_week Data frame generated Grid_Matrix code containing reward database scenario (suppose one week time)","code":""},{"path":"https://rte-antares-rpackage.github.io/antaresWaterValues/reference/get_reward_interpolation.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create approximation of reward function for each scenario, used in Bellman — get_reward_interpolation","text":"List stats::approxfun scenario","code":""},{"path":"https://rte-antares-rpackage.github.io/antaresWaterValues/reference/get_weekly_cost.html","id":null,"dir":"Reference","previous_headings":"","what":"Get objective values of the optimization problem of each week and each scenario for a given simulation simu, mainly used in get_Reward() to build reward functions. — get_weekly_cost","title":"Get objective values of the optimization problem of each week and each scenario for a given simulation simu, mainly used in get_Reward() to build reward functions. — get_weekly_cost","text":"Get objective values optimization problem week scenario given simulation simu, mainly used get_Reward() build reward functions.","code":""},{"path":"https://rte-antares-rpackage.github.io/antaresWaterValues/reference/get_weekly_cost.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get objective values of the optimization problem of each week and each scenario for a given simulation simu, mainly used in get_Reward() to build reward functions. — get_weekly_cost","text":"","code":"get_weekly_cost(simu, mcyears, expansion = F)"},{"path":"https://rte-antares-rpackage.github.io/antaresWaterValues/reference/get_weekly_cost.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get objective values of the optimization problem of each week and each scenario for a given simulation simu, mainly used in get_Reward() to build reward functions. — get_weekly_cost","text":"simu List simulation parameters returned function antaresRead::setSimulationPath() simulation selected. mcyears Vector integer. Monte Carlo years used compute water values. expansion Binary. True mode expansion (ie linear relaxation) Antares used run simulations, argument passed runSimulation. recommended use mode expansion, faster (one iteration done) results smoother cost result correspond linear relaxation problem.","code":""},{"path":"https://rte-antares-rpackage.github.io/antaresWaterValues/reference/get_weekly_cost.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get objective values of the optimization problem of each week and each scenario for a given simulation simu, mainly used in get_Reward() to build reward functions. — get_weekly_cost","text":"dplyr::tibble() 3 columns : \"timeId\", \"mcYear\" \"ov_cost\".","code":""},{"path":"https://rte-antares-rpackage.github.io/antaresWaterValues/reference/launchSimulation.html","id":null,"dir":"Reference","previous_headings":"","what":"Launch the simulation — launchSimulation","title":"Launch the simulation — launchSimulation","text":"Launch simulation","code":""},{"path":"https://rte-antares-rpackage.github.io/antaresWaterValues/reference/launchSimulation.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Launch the simulation — launchSimulation","text":"","code":"launchSimulation(   opts,   i,   sim_name,   path_solver,   expansion,   show_output_on_console,   constraint_value )"},{"path":"https://rte-antares-rpackage.github.io/antaresWaterValues/reference/launchSimulation.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Launch the simulation — launchSimulation","text":"opts List study parameters returned function antaresRead::setSimulationPath(simulation=\"input\") input mode. Integer. Number simulation. sim_name Character. name simulation. path_solver Character containing Antares Solver path, argument passed runSimulation. expansion Binary. True mode expansion (ie linear relaxation) Antares used run simulations, argument passed runSimulation. recommended use mode expansion, faster (one iteration done) results smoother cost result correspond linear relaxation problem. show_output_on_console Argument passed runSimulation.","code":""},{"path":"https://rte-antares-rpackage.github.io/antaresWaterValues/reference/plot_Bellman.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot Bellman and water values — plot_Bellman","title":"Plot Bellman and water values — plot_Bellman","text":"Plot Bellman values water values differents weeks listed weeks_to_plot.","code":""},{"path":"https://rte-antares-rpackage.github.io/antaresWaterValues/reference/plot_Bellman.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot Bellman and water values — plot_Bellman","text":"","code":"plot_Bellman(value_nodes_dt, weeks_to_plot)"},{"path":"https://rte-antares-rpackage.github.io/antaresWaterValues/reference/plot_Bellman.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot Bellman and water values — plot_Bellman","text":"value_nodes_dt dplyr::tibble() containing Bellman water values. Output aggregated_results Grid_Matrix(). weeks_to_plot Vector integer. Weeks plot.","code":""},{"path":"https://rte-antares-rpackage.github.io/antaresWaterValues/reference/plot_Bellman.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot Bellman and water values — plot_Bellman","text":"ggplot2::ggplot() object.","code":""},{"path":"https://rte-antares-rpackage.github.io/antaresWaterValues/reference/plot_reward.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot mean reward — plot_reward","title":"Plot mean reward — plot_reward","text":"Plot mean reward functions different weeks listed weeks_to_plot.","code":""},{"path":"https://rte-antares-rpackage.github.io/antaresWaterValues/reference/plot_reward.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot mean reward — plot_reward","text":"","code":"plot_reward(reward_base, weeks_to_plot)"},{"path":"https://rte-antares-rpackage.github.io/antaresWaterValues/reference/plot_reward.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot mean reward — plot_reward","text":"reward_base dplyr::tibble() containing reward functions. Output reward get_Reward(). weeks_to_plot Vector integer. Weeks plot.","code":""},{"path":"https://rte-antares-rpackage.github.io/antaresWaterValues/reference/plot_reward.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot mean reward — plot_reward","text":"graph ggplot2::ggplot() object. table dplyr::tibble() containing plotted data.","code":""},{"path":"https://rte-antares-rpackage.github.io/antaresWaterValues/reference/plot_reward_mc.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot reward — plot_reward_mc","title":"Plot reward — plot_reward_mc","text":"Plot reward functions different weeks listed weeks_to_plot different scenarios listed scenarios_to_plot.","code":""},{"path":"https://rte-antares-rpackage.github.io/antaresWaterValues/reference/plot_reward_mc.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot reward — plot_reward_mc","text":"","code":"plot_reward_mc(reward_base, weeks_to_plot, scenarios_to_plot)"},{"path":"https://rte-antares-rpackage.github.io/antaresWaterValues/reference/plot_reward_mc.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot reward — plot_reward_mc","text":"reward_base dplyr::tibble() containing reward functions. Output reward get_Reward(). weeks_to_plot Vector integer. Weeks plot. scenarios_to_plot Vector integer. Scenarios plot.","code":""},{"path":"https://rte-antares-rpackage.github.io/antaresWaterValues/reference/plot_reward_mc.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot reward — plot_reward_mc","text":"graph ggplot2::ggplot() object. table dplyr::tibble() containing plotted data.","code":""},{"path":"https://rte-antares-rpackage.github.io/antaresWaterValues/reference/plot_reward_variation.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot mean reward variation — plot_reward_variation","title":"Plot mean reward variation — plot_reward_variation","text":"Plot variation mean reward functions different weeks listed weeks_to_plot.","code":""},{"path":"https://rte-antares-rpackage.github.io/antaresWaterValues/reference/plot_reward_variation.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot mean reward variation — plot_reward_variation","text":"","code":"plot_reward_variation(reward_base, weeks_to_plot)"},{"path":"https://rte-antares-rpackage.github.io/antaresWaterValues/reference/plot_reward_variation.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot mean reward variation — plot_reward_variation","text":"reward_base dplyr::tibble() containing reward functions. Output reward get_Reward(). weeks_to_plot Vector integer. Weeks plot.","code":""},{"path":"https://rte-antares-rpackage.github.io/antaresWaterValues/reference/plot_reward_variation.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot mean reward variation — plot_reward_variation","text":"graph ggplot2::ggplot() object. table dplyr::tibble() containing plotted data.","code":""},{"path":"https://rte-antares-rpackage.github.io/antaresWaterValues/reference/plot_reward_variation_mc.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot reward variation — plot_reward_variation_mc","title":"Plot reward variation — plot_reward_variation_mc","text":"Plot variation reward functions different weeks listed weeks_to_plot different scenarios listed scenarios_to_plot.","code":""},{"path":"https://rte-antares-rpackage.github.io/antaresWaterValues/reference/plot_reward_variation_mc.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot reward variation — plot_reward_variation_mc","text":"","code":"plot_reward_variation_mc(reward_base, weeks_to_plot, scenarios_to_plot)"},{"path":"https://rte-antares-rpackage.github.io/antaresWaterValues/reference/plot_reward_variation_mc.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot reward variation — plot_reward_variation_mc","text":"reward_base dplyr::tibble() containing reward functions. Output reward get_Reward(). weeks_to_plot Vector integer. Weeks plot. scenarios_to_plot Vector integer. Scenarios plot.","code":""},{"path":"https://rte-antares-rpackage.github.io/antaresWaterValues/reference/plot_reward_variation_mc.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot reward variation — plot_reward_variation_mc","text":"graph ggplot2::ggplot() object. table dplyr::tibble() containing plotted data.","code":""},{"path":"https://rte-antares-rpackage.github.io/antaresWaterValues/reference/readReservoirLevels.html","id":null,"dir":"Reference","previous_headings":"","what":"Read reservoir rule curves — readReservoirLevels","title":"Read reservoir rule curves — readReservoirLevels","text":"Read reservoir low high levels hydro object specified area.","code":""},{"path":"https://rte-antares-rpackage.github.io/antaresWaterValues/reference/readReservoirLevels.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Read reservoir rule curves — readReservoirLevels","text":"","code":"readReservoirLevels(area, opts)"},{"path":"https://rte-antares-rpackage.github.io/antaresWaterValues/reference/readReservoirLevels.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Read reservoir rule curves — readReservoirLevels","text":"area Character. Antares area concerned water values computation. opts List study parameters returned function antaresRead::setSimulationPath(simulation=\"input\") input mode.","code":""},{"path":"https://rte-antares-rpackage.github.io/antaresWaterValues/reference/readReservoirLevels.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Read reservoir rule curves — readReservoirLevels","text":"dplyr::tibble() 4 columns : \"timeId\" (index week), \"level_low\", \"level_avg\" \"level_high\". Values given end last hour end week.","code":""},{"path":"https://rte-antares-rpackage.github.io/antaresWaterValues/reference/remove_out.html","id":null,"dir":"Reference","previous_headings":"","what":"Post process water values — remove_out","title":"Post process water values — remove_out","text":"Replace extreme water values chosen values.","code":""},{"path":"https://rte-antares-rpackage.github.io/antaresWaterValues/reference/remove_out.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Post process water values — remove_out","text":"","code":"remove_out(   results_dt,   min = NULL,   max = NULL,   max_vu,   min_vu,   replace_na_method )"},{"path":"https://rte-antares-rpackage.github.io/antaresWaterValues/reference/remove_out.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Post process water values — remove_out","text":"results_dt dplyr::tibble() containing water values. Output watervalues Grid_Matrix(). min Double. Minimal accepted water value. max Double. Maximal accepted water value. max_vu Double. Value use water values higher max. min_vu Double. Value use water values lower min. replace_na_method Character. Method replace extreme values, either \"constant values\" replace max_vu min_vu \"extreme values\" replace extreme values current week.","code":""},{"path":"https://rte-antares-rpackage.github.io/antaresWaterValues/reference/remove_out.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Post process water values — remove_out","text":"dplyr::tibble() format results_dt.","code":""},{"path":"https://rte-antares-rpackage.github.io/antaresWaterValues/reference/resetHydroStorage.html","id":null,"dir":"Reference","previous_headings":"","what":"Reset to 0 the hydro storage time series, used in setupWaterValuesSimulation — resetHydroStorage","title":"Reset to 0 the hydro storage time series, used in setupWaterValuesSimulation — resetHydroStorage","text":"Reset 0 hydro storage time series, used setupWaterValuesSimulation","code":""},{"path":"https://rte-antares-rpackage.github.io/antaresWaterValues/reference/resetHydroStorage.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Reset to 0 the hydro storage time series, used in setupWaterValuesSimulation — resetHydroStorage","text":"","code":"resetHydroStorage(area, opts)"},{"path":"https://rte-antares-rpackage.github.io/antaresWaterValues/reference/resetHydroStorage.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Reset to 0 the hydro storage time series, used in setupWaterValuesSimulation — resetHydroStorage","text":"area valid Antares area. opts List simulation parameters returned function antaresRead::setSimulationPath","code":""},{"path":"https://rte-antares-rpackage.github.io/antaresWaterValues/reference/resetHydroStorage.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Reset to 0 the hydro storage time series, used in setupWaterValuesSimulation — resetHydroStorage","text":"updated list containing various information simulation.","code":""},{"path":"https://rte-antares-rpackage.github.io/antaresWaterValues/reference/resetHydroStorage.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Reset to 0 the hydro storage time series, used in setupWaterValuesSimulation — resetHydroStorage","text":"can restore original hydro storage time series restoreHydroStorage.","code":""},{"path":[]},{"path":"https://rte-antares-rpackage.github.io/antaresWaterValues/reference/resetStudy.html","id":null,"dir":"Reference","previous_headings":"","what":"Reset an Antares study. In case, there is a problem when executing runWaterValuesSimulation(), run this function to restore the study. — resetStudy","title":"Reset an Antares study. In case, there is a problem when executing runWaterValuesSimulation(), run this function to restore the study. — resetStudy","text":"Reset Antares study. case, problem executing runWaterValuesSimulation(), run function restore study.","code":""},{"path":"https://rte-antares-rpackage.github.io/antaresWaterValues/reference/resetStudy.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Reset an Antares study. In case, there is a problem when executing runWaterValuesSimulation(), run this function to restore the study. — resetStudy","text":"","code":"resetStudy(opts, area, pumping, backup)"},{"path":"https://rte-antares-rpackage.github.io/antaresWaterValues/reference/resetStudy.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Reset an Antares study. In case, there is a problem when executing runWaterValuesSimulation(), run this function to restore the study. — resetStudy","text":"opts List study parameters returned function antaresRead::setSimulationPath(simulation=\"input\") input mode. area Character. Antares area concerned water values computation. pumping Boolean. True take account pumping capacity. backup List hydro_storage, load misc_gen backups area generated function getBackupData()","code":""},{"path":"https://rte-antares-rpackage.github.io/antaresWaterValues/reference/restoreHydroStorage.html","id":null,"dir":"Reference","previous_headings":"","what":"Restore the hydro storage time series, used in runWaterValuesSimulation — restoreHydroStorage","title":"Restore the hydro storage time series, used in runWaterValuesSimulation — restoreHydroStorage","text":"Restore hydro storage time series, used runWaterValuesSimulation","code":""},{"path":"https://rte-antares-rpackage.github.io/antaresWaterValues/reference/restoreHydroStorage.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Restore the hydro storage time series, used in runWaterValuesSimulation — restoreHydroStorage","text":"","code":"restoreHydroStorage(area, opts, data)"},{"path":"https://rte-antares-rpackage.github.io/antaresWaterValues/reference/restoreHydroStorage.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Restore the hydro storage time series, used in runWaterValuesSimulation — restoreHydroStorage","text":"area valid Antares area. opts List simulation parameters returned function antaresRead::setSimulationPath data Backup hydro storage matrix","code":""},{"path":"https://rte-antares-rpackage.github.io/antaresWaterValues/reference/restoreHydroStorage.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Restore the hydro storage time series, used in runWaterValuesSimulation — restoreHydroStorage","text":"updated list containing various information simulation.","code":""},{"path":"https://rte-antares-rpackage.github.io/antaresWaterValues/reference/restore_fictive_fatal_prod_demand.html","id":null,"dir":"Reference","previous_headings":"","what":"Restore load and misc gen time series — restore_fictive_fatal_prod_demand","title":"Restore load and misc gen time series — restore_fictive_fatal_prod_demand","text":"Restore load misc gen time series","code":""},{"path":"https://rte-antares-rpackage.github.io/antaresWaterValues/reference/restore_fictive_fatal_prod_demand.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Restore load and misc gen time series — restore_fictive_fatal_prod_demand","text":"","code":"restore_fictive_fatal_prod_demand(area, opts, load, misc_gen)"},{"path":"https://rte-antares-rpackage.github.io/antaresWaterValues/reference/restore_fictive_fatal_prod_demand.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Restore load and misc gen time series — restore_fictive_fatal_prod_demand","text":"area valid Antares area. opts List simulation parameters returned function antaresRead::setSimulationPath load Matrix 8760 rows contains backup load area misc_gen Matrix 8760 rows contains backup misc generation area","code":""},{"path":"https://rte-antares-rpackage.github.io/antaresWaterValues/reference/restore_fictive_fatal_prod_demand.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Restore load and misc gen time series — restore_fictive_fatal_prod_demand","text":"updated list containing various information simulation.","code":""},{"path":"https://rte-antares-rpackage.github.io/antaresWaterValues/reference/reward_offset.html","id":null,"dir":"Reference","previous_headings":"","what":"Take into account overall cost in local reward — reward_offset","title":"Take into account overall cost in local reward — reward_offset","text":"Modify local reward take account overall cost simulation, mainly used get_Reward().","code":""},{"path":"https://rte-antares-rpackage.github.io/antaresWaterValues/reference/reward_offset.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Take into account overall cost in local reward — reward_offset","text":"","code":"reward_offset(simu, df_reward, u0 = c(), mcyears, expansion = F)"},{"path":"https://rte-antares-rpackage.github.io/antaresWaterValues/reference/reward_offset.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Take into account overall cost in local reward — reward_offset","text":"simu List simulation parameters returned function antaresRead::setSimulationPath() simulation selected. df_reward dplyr::tibble() computed function get_local_reward(). u0 dplyr::tibble() columns \"week\", \"u\" \"mcYear\" (optional) gives constraint values per week (per scenario) used simulation. extracted simulation_values output runWaterValuesSimulation() filtering column \"sim\" corresponding simulation. mcyears Vector integer. Monte Carlo years used compute water values. expansion Binary. True mode expansion (ie linear relaxation) Antares used run simulations, argument passed runSimulation. recommended use mode expansion, faster (one iteration done) results smoother cost result correspond linear relaxation problem.","code":""},{"path":"https://rte-antares-rpackage.github.io/antaresWaterValues/reference/reward_offset.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Take into account overall cost in local reward — reward_offset","text":"dplyr::tibble() columns \"week\", \"mcYear\", \"u\" \"reward\".","code":""},{"path":"https://rte-antares-rpackage.github.io/antaresWaterValues/reference/runWaterValuesSimulation.html","id":null,"dir":"Reference","previous_headings":"","what":"Run Antares simulations in order to compute water values for a specific area — runWaterValuesSimulation","title":"Run Antares simulations in order to compute water values for a specific area — runWaterValuesSimulation","text":"nb_disc_stock simulations run. simulation evaluates cost specific control week scenario. control difference initial level final level week. Results simulations can used compute reward function get_Reward() compute water values Grid_Matrix(). See vignette(\"computation_watervalues\") details.","code":""},{"path":"https://rte-antares-rpackage.github.io/antaresWaterValues/reference/runWaterValuesSimulation.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Run Antares simulations in order to compute water values for a specific area — runWaterValuesSimulation","text":"","code":"runWaterValuesSimulation(   area = NULL,   simulation_name = \"wv_sim_%s\",   nb_disc_stock = 10,   mcyears = NULL,   path_solver = NULL,   show_output_on_console = FALSE,   overwrite = FALSE,   opts,   file_name = NULL,   pumping = T,   efficiency,   launch_simulations = NULL,   constraint_values = NULL,   expansion = T )"},{"path":"https://rte-antares-rpackage.github.io/antaresWaterValues/reference/runWaterValuesSimulation.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Run Antares simulations in order to compute water values for a specific area — runWaterValuesSimulation","text":"area Character. Antares area concerned water values computation. simulation_name Character. name simulation, s placeholder constraint value defined nb_disc_stock. nb_disc_stock Integer. Number simulations launch, nb_disc_stock different controls values generated maximum pumping power maximum generating pumping constraint_generator(). control values evaluated simulation. mcyears Vector integer. Monte Carlo years used compute water values. path_solver Character containing Antares Solver path, argument passed runSimulation. show_output_on_console Argument passed runSimulation. overwrite area cluster already exists, overwritten? opts List study parameters returned function antaresRead::setSimulationPath(simulation=\"input\") input mode. file_name Rdata file name. pumping Boolean. True take account pumping capacity. efficiency Double 0 1. Pumping efficiency ratio. Get getPumpEfficiency(). launch_simulations Boolean vector booleans length nb_disc_stock. True run simulations. constraint_values Constraint values use run simulations, generated function constraint_generator instead parameter nb_disc_stock. expansion Binary. True mode expansion (ie linear relaxation) Antares used run simulations, argument passed runSimulation. recommended use mode expansion, faster (one iteration done) results smoother cost result correspond linear relaxation problem.","code":""},{"path":"https://rte-antares-rpackage.github.io/antaresWaterValues/reference/runWaterValuesSimulation.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Run Antares simulations in order to compute water values for a specific area — runWaterValuesSimulation","text":"simulation_names Vector character. Names simulations. simulation_values dplyr::tibble() generated constraint_generator() describing controls simulation. area Parameter area. mcyears Parameter mcyears. pumping Parameter pumping. efficiency Parameter efficiency. expansion Parameter expansion. fictive_areas Parameter fictive_areas.","code":""},{"path":"https://rte-antares-rpackage.github.io/antaresWaterValues/reference/runWaterValuesSimulation.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Run Antares simulations in order to compute water values for a specific area — runWaterValuesSimulation","text":"implement specific control storage Antares study modified : hydro object deactivated setting inflows 0 set reservoir_management FALSE. Two fictive areas representing pumping generating created linked area. fictive area pumping high enough load unsupplied cost 0. fictive area generating thermal cluster marginal cost 0. weekly binding constraint created imposing difference flow coming generating fictive area flow going pumping fictive area multiplied pumping efficiency equal control. end simulations, study reset.","code":""},{"path":[]},{"path":"https://rte-antares-rpackage.github.io/antaresWaterValues/reference/runWaterValuesSimulationMultiStock.html","id":null,"dir":"Reference","previous_headings":"","what":"Run Antares simulations in order to compute water values for multiple areas — runWaterValuesSimulationMultiStock","title":"Run Antares simulations in order to compute water values for multiple areas — runWaterValuesSimulationMultiStock","text":"simulation evaluates week scenario cost set controls areas list_areas.","code":""},{"path":"https://rte-antares-rpackage.github.io/antaresWaterValues/reference/runWaterValuesSimulationMultiStock.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Run Antares simulations in order to compute water values for multiple areas — runWaterValuesSimulationMultiStock","text":"","code":"runWaterValuesSimulationMultiStock(   list_areas,   list_pumping,   list_efficiency,   simulation_name = \"wv_sim_%s\",   mcyears = NULL,   path_solver = NULL,   show_output_on_console = FALSE,   overwrite = FALSE,   opts,   file_name = NULL,   launch_simulations = NULL,   constraint_values = NULL,   expansion = T )"},{"path":"https://rte-antares-rpackage.github.io/antaresWaterValues/reference/runWaterValuesSimulationMultiStock.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Run Antares simulations in order to compute water values for multiple areas — runWaterValuesSimulationMultiStock","text":"list_areas Vector areas concerned simulations. list_pumping Named vector binary tell pumping available areas. list_efficiency Named vector pumping efficiency. simulation_name Character. name simulation, s placeholder constraint value defined nb_disc_stock. mcyears Vector integer. Monte Carlo years used compute water values. path_solver Character containing Antares Solver path, argument passed runSimulation. show_output_on_console Argument passed runSimulation. overwrite area cluster already exists, overwritten? opts List study parameters returned function antaresRead::setSimulationPath(simulation=\"input\") input mode. file_name Rdata file name. launch_simulations Boolean vector booleans length nb_disc_stock. True run simulations. constraint_values Constraint values area use run simulations, generated function constraint_generator additional column \"area\". expansion Binary. True mode expansion (ie linear relaxation) Antares used run simulations, argument passed runSimulation. recommended use mode expansion, faster (one iteration done) results smoother cost result correspond linear relaxation problem.","code":""},{"path":"https://rte-antares-rpackage.github.io/antaresWaterValues/reference/runWaterValuesSimulationMultiStock.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Run Antares simulations in order to compute water values for multiple areas — runWaterValuesSimulationMultiStock","text":"simulation_names Vector character. Names simulations. simulation_values dplyr::tibble() generated constraint_generator() describing controls simulation. list_areas Parameter list_areas. mcyears Parameter mcyears. list_pumping Parameter list_pumping. list_efficiency Parameter list_efficiency. expansion Parameter expansion.","code":""},{"path":[]},{"path":"https://rte-antares-rpackage.github.io/antaresWaterValues/reference/setupWaterValuesSimulation.html","id":null,"dir":"Reference","previous_headings":"","what":"Setup a simulation before running it for calculating Water Values, used in runWaterValuesSimulation — setupWaterValuesSimulation","title":"Setup a simulation before running it for calculating Water Values, used in runWaterValuesSimulation — setupWaterValuesSimulation","text":"Setup simulation running calculating Water Values, used runWaterValuesSimulation","code":""},{"path":"https://rte-antares-rpackage.github.io/antaresWaterValues/reference/setupWaterValuesSimulation.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Setup a simulation before running it for calculating Water Values, used in runWaterValuesSimulation — setupWaterValuesSimulation","text":"","code":"setupWaterValuesSimulation(   area,   overwrite = FALSE,   opts,   pumping = F,   efficiency,   backup )"},{"path":"https://rte-antares-rpackage.github.io/antaresWaterValues/reference/setupWaterValuesSimulation.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Setup a simulation before running it for calculating Water Values, used in runWaterValuesSimulation — setupWaterValuesSimulation","text":"area area concerned simulation. overwrite area cluster already exists, overwrite ? opts List simulation parameters returned function antaresRead::setSimulationPath pumping Boolean. True take account pumping. efficiency Double. Pumping efficiency backup List hydro_storage, load misc_gen backups area generated function getBackupData","code":""},{"path":"https://rte-antares-rpackage.github.io/antaresWaterValues/reference/setupWaterValuesSimulation.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Setup a simulation before running it for calculating Water Values, used in runWaterValuesSimulation — setupWaterValuesSimulation","text":"result antaresRead::simOptions","code":""},{"path":"https://rte-antares-rpackage.github.io/antaresWaterValues/reference/shiny_water_values.html","id":null,"dir":"Reference","previous_headings":"","what":"Open web interface for computing water values — shiny_water_values","title":"Open web interface for computing water values — shiny_water_values","text":"Open web interface computing water values. Select study parameter opts.","code":""},{"path":"https://rte-antares-rpackage.github.io/antaresWaterValues/reference/shiny_water_values.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Open web interface for computing water values — shiny_water_values","text":"","code":"shiny_water_values(opts, silent = F)"},{"path":"https://rte-antares-rpackage.github.io/antaresWaterValues/reference/shiny_water_values.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Open web interface for computing water values — shiny_water_values","text":"opts List study parameters returned function antaresRead::setSimulationPath(simulation=\"input\") input mode. silent Binary. TRUE suppress warnings.","code":""},{"path":"https://rte-antares-rpackage.github.io/antaresWaterValues/reference/states_to_percent.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert Reservoir levels from MWh to percent of reservoir. — states_to_percent","title":"Convert Reservoir levels from MWh to percent of reservoir. — states_to_percent","text":"Convert Reservoir levels MWh percent reservoir.","code":""},{"path":"https://rte-antares-rpackage.github.io/antaresWaterValues/reference/states_to_percent.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert Reservoir levels from MWh to percent of reservoir. — states_to_percent","text":"","code":"states_to_percent(data, states_step_ratio = 0.01)"},{"path":"https://rte-antares-rpackage.github.io/antaresWaterValues/reference/states_to_percent.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert Reservoir levels from MWh to percent of reservoir. — states_to_percent","text":"data data.table contains statesid states columns states_step_ratio percent step two successive levels.","code":""},{"path":"https://rte-antares-rpackage.github.io/antaresWaterValues/reference/to_Antares_Format.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert water values to Antares format — to_Antares_Format","title":"Convert water values to Antares format — to_Antares_Format","text":"function converts water values generated Grid_Matrix() format expected Antares: 365*101 matrix, rows 365 days year columns round percentage values ranging 0 100 assessing reservoir level. Use antaresEditObject::writeWaterValues() write water values.","code":""},{"path":"https://rte-antares-rpackage.github.io/antaresWaterValues/reference/to_Antares_Format.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert water values to Antares format — to_Antares_Format","text":"","code":"to_Antares_Format(data, constant = T)"},{"path":"https://rte-antares-rpackage.github.io/antaresWaterValues/reference/to_Antares_Format.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert water values to Antares format — to_Antares_Format","text":"data dplyr::tibble() representing water values, output aggregated_results generated Grid_Matrix(). constant Binary. Generate daily constant values week. FALSE interpolation.","code":""},{"path":"https://rte-antares-rpackage.github.io/antaresWaterValues/reference/to_Antares_Format.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert water values to Antares format — to_Antares_Format","text":"365*101 numeric matrix","code":""},{"path":"https://rte-antares-rpackage.github.io/antaresWaterValues/reference/to_Antares_Format.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Convert water values to Antares format — to_Antares_Format","text":"Please use to_Antares_Format_bis() using hydro-pricing-mode=accurate Antares.","code":""},{"path":[]},{"path":"https://rte-antares-rpackage.github.io/antaresWaterValues/reference/to_Antares_Format_bis.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert water values to Antares format with high accuracy — to_Antares_Format_bis","title":"Convert water values to Antares format with high accuracy — to_Antares_Format_bis","text":"function converts water values generated Grid_Matrix() format expected Antares: 365*101 matrix, rows 365 days year columns round percentage values ranging 0 100 assessing reservoir level. Use antaresEditObject::writeWaterValues() write water values.","code":""},{"path":"https://rte-antares-rpackage.github.io/antaresWaterValues/reference/to_Antares_Format_bis.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert water values to Antares format with high accuracy — to_Antares_Format_bis","text":"","code":"to_Antares_Format_bis(data)"},{"path":"https://rte-antares-rpackage.github.io/antaresWaterValues/reference/to_Antares_Format_bis.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert water values to Antares format with high accuracy — to_Antares_Format_bis","text":"data dplyr::tibble() representing water values, output aggregated_results generated Grid_Matrix().","code":""},{"path":"https://rte-antares-rpackage.github.io/antaresWaterValues/reference/to_Antares_Format_bis.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert water values to Antares format with high accuracy — to_Antares_Format_bis","text":"365*101 numeric matrix","code":""},{"path":[]},{"path":"https://rte-antares-rpackage.github.io/antaresWaterValues/reference/value_node_gen.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate water values from Bellman values, used in Grid_Matrix and build_data_watervalues — value_node_gen","title":"Calculate water values from Bellman values, used in Grid_Matrix and build_data_watervalues — value_node_gen","text":"Calculate water values Bellman values, used Grid_Matrix build_data_watervalues","code":""},{"path":"https://rte-antares-rpackage.github.io/antaresWaterValues/reference/value_node_gen.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate water values from Bellman values, used in Grid_Matrix and build_data_watervalues — value_node_gen","text":"","code":"value_node_gen(watervalues, statesdt, reservoir)"},{"path":"https://rte-antares-rpackage.github.io/antaresWaterValues/reference/value_node_gen.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate water values from Bellman values, used in Grid_Matrix and build_data_watervalues — value_node_gen","text":"watervalues intermediate result Grid_Matrix contains bellman values statesdt intermediate result Grid_Matrix contains states dicretization reservoir intermediate result Grid_Matrix contains reservoir levels","code":""},{"path":"https://rte-antares-rpackage.github.io/antaresWaterValues/reference/waterValuesViz.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot water values — waterValuesViz","title":"Plot water values — waterValuesViz","text":"Plot water values weeks levels stock.","code":""},{"path":"https://rte-antares-rpackage.github.io/antaresWaterValues/reference/waterValuesViz.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot water values — waterValuesViz","text":"","code":"waterValuesViz(Data, filter_penalties = FALSE)"},{"path":"https://rte-antares-rpackage.github.io/antaresWaterValues/reference/waterValuesViz.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot water values — waterValuesViz","text":"Data Water values result. Output aggregated_results Grid_Matrix(). filter_penalties Binary. TRUE, show water values inside rule curves.","code":""},{"path":"https://rte-antares-rpackage.github.io/antaresWaterValues/reference/waterValuesViz.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot water values — waterValuesViz","text":"ggplot2::ggplot() object.","code":""},{"path":[]},{"path":"https://rte-antares-rpackage.github.io/antaresWaterValues/news/index.html","id":"new-features-1-1-0","dir":"Changelog","previous_headings":"","what":"New features","title":"antaresWaterValues 1.1.0","text":"Mode expansion compatible AntaREST Possible launch subset simulations parameter launch_simulations","code":""},{"path":"https://rte-antares-rpackage.github.io/antaresWaterValues/news/index.html","id":"improvements-1-1-0","dir":"Changelog","previous_headings":"","what":"Improvements","title":"antaresWaterValues 1.1.0","text":"Update documentation","code":""},{"path":"https://rte-antares-rpackage.github.io/antaresWaterValues/news/index.html","id":"remove-features-1-1-0","dir":"Changelog","previous_headings":"","what":"Remove features","title":"antaresWaterValues 1.1.0","text":"one method compute Bellman values Grid_Matrix Remove reward computation Grid_Matrix","code":""},{"path":"https://rte-antares-rpackage.github.io/antaresWaterValues/news/index.html","id":"bugfixes-1-1-0","dir":"Changelog","previous_headings":"","what":"Bugfixes","title":"antaresWaterValues 1.1.0","text":"Update binding constraints old versions Antares Error non integer pumping power","code":""},{"path":[]},{"path":"https://rte-antares-rpackage.github.io/antaresWaterValues/news/index.html","id":"major-changes-1-0-0","dir":"Changelog","previous_headings":"","what":"Major changes","title":"antaresWaterValues 1.0.0","text":"Compatibilty AntaREST Simplification factorization runWaterValuesSimulation Removing arguments relative district fictive areas Better deal errors runWaterValuesSimulation backup data","code":""},{"path":[]},{"path":"https://rte-antares-rpackage.github.io/antaresWaterValues/news/index.html","id":"new-features-0-5-0","dir":"Changelog","previous_headings":"","what":"New features","title":"antaresWaterValues 0.5.0","text":"Initialization website New github actions","code":""},{"path":"https://rte-antares-rpackage.github.io/antaresWaterValues/news/index.html","id":"improvements-0-5-0","dir":"Changelog","previous_headings":"","what":"Improvements","title":"antaresWaterValues 0.5.0","text":"Unify functions parameters Cleaner functions documentation","code":""},{"path":[]},{"path":"https://rte-antares-rpackage.github.io/antaresWaterValues/news/index.html","id":"new-features-0-4-2","dir":"Changelog","previous_headings":"","what":"New features","title":"antaresWaterValues 0.4.2","text":"Use cvar Bellman values computation","code":""},{"path":"https://rte-antares-rpackage.github.io/antaresWaterValues/news/index.html","id":"improvements-0-4-2","dir":"Changelog","previous_headings":"","what":"Improvements","title":"antaresWaterValues 0.4.2","text":"Simplify scnearization controls","code":""},{"path":[]},{"path":"https://rte-antares-rpackage.github.io/antaresWaterValues/news/index.html","id":"major-changes-0-4-0","dir":"Changelog","previous_headings":"","what":"Major changes","title":"antaresWaterValues 0.4.0","text":"Controls evaluated Antares can differ scenarios","code":""},{"path":[]},{"path":"https://rte-antares-rpackage.github.io/antaresWaterValues/news/index.html","id":"minor-changes-0-3-3","dir":"Changelog","previous_headings":"","what":"Minor changes","title":"antaresWaterValues 0.3.3","text":"Adding possibility force final level stock end year thanks penalties","code":""},{"path":[]},{"path":"https://rte-antares-rpackage.github.io/antaresWaterValues/news/index.html","id":"minor-changes-0-3-2","dir":"Changelog","previous_headings":"","what":"Minor changes","title":"antaresWaterValues 0.3.2","text":"Adding new data saved end simulation order simplify Shiny interface Separate Shiny code modules","code":""},{"path":[]},{"path":"https://rte-antares-rpackage.github.io/antaresWaterValues/news/index.html","id":"minor-changes-0-3-1","dir":"Changelog","previous_headings":"","what":"Minor changes","title":"antaresWaterValues v0.3.1","text":"Choosing study without Windows shell folder widget using shiny_water_values function’s opts parameter Simplifying ‘reset’ ‘restore’ functions","code":""},{"path":[]},{"path":"https://rte-antares-rpackage.github.io/antaresWaterValues/news/index.html","id":"major-changes-0-3-0","dir":"Changelog","previous_headings":"","what":"Major changes","title":"antaresWaterValues v0.3.0 [august 2023]","text":"New method calculate rewards based marginal prices Deleting inaccessible states adding penalties rule curves Better faster implementation dynamic programming scheme","code":""},{"path":"https://rte-antares-rpackage.github.io/antaresWaterValues/news/index.html","id":"minor-changes-0-3-0","dir":"Changelog","previous_headings":"","what":"Minor changes","title":"antaresWaterValues v0.3.0 [august 2023]","text":"Simplification package Shiny interface Non constant generating pumping powers taken account","code":""},{"path":"https://rte-antares-rpackage.github.io/antaresWaterValues/news/index.html","id":"antareswatervalues-v010-april-2023","dir":"Changelog","previous_headings":"","what":"antaresWaterValues v0.1.0 [april 2023]","title":"antaresWaterValues v0.1.0 [april 2023]","text":"Initial version package","code":""}]
